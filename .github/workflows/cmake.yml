name: CMake

on:
  pull_request:
    branches:
      - 'master'
  push:
    branches:
      - 'master'

env:
  BUILD_TYPE: Release
  GH_USERNAME: ${{ github.actor }}

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.9']

    steps:
      - uses: actions/checkout@v4

      - name: Enable Developer Command Prompt
        uses: ilammy/msvc-dev-cmd@v1.12.1
        if: startsWith(matrix.os, 'windows')

      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v1.13
        with:
          cmake-version: '3.22.x'

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Python dependencies
        run: |
          python -VV
          python -m pip install --user --upgrade pip
          python -m pip install --user -r ${{ github.workspace }}/requirements.txt

      - name: Create Build Environment
        # Some projects don't allow in-source building, so create a separate build directory
        # We'll use this as our working directory for all subsequent commands.
        run: |
          cmake --version
          cmake -E make_directory ${{ github.workspace }}/build

      - name: Configure CMake
        # Use a bash shell so we can use the same syntax for environment variable
        # access regardless of the host operating system
        shell: bash
        working-directory: ${{ github.workspace }}/build
        # Note the current convention is to use the -S and -B options here to specify source
        # and build directories, but this is only available with CMake 3.13 and higher.
        # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
        run: cmake ..

      - name: Build
        working-directory: ${{ github.workspace }}/build
        shell: bash
        run: cmake --build . --target install --config $BUILD_TYPE

      # - name: Test
      #   working-directory: ${{ github.workspace }}/build
      #   shell: bash
      #   run: ctest -C $BUILD_TYPE --verbose

      - name: Stage binaries
        if: |
          contains(matrix.os, 'latest') &&
          contains(matrix.python-version, '3.9')
        run: |
          git config --global user.name $GH_USERNAME
          git config --global user.email $GH_USERNAME@users.noreply.github.com
          git config --global pull.rebase false
          git stash
          git pull
          git stash apply
          git add ${{ github.workspace }}/pyfunnel/lib

      - name: Push Linux & macOS binaries
        if: |
          (matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest') &&
          contains(matrix.python-version, '3.9')
        run: |
          git diff-index --quiet HEAD || { git commit -m "Add ${{ matrix.os }} binaries" && git push; }

      - name: Push Windows binaries
        if: |
          matrix.os == 'windows-latest' &&
          contains(matrix.python-version, '3.9')
        run: |
          git diff-index --quiet HEAD; if(-not $?) { (git commit -m "Add ${{ matrix.os }} binaries") -and (git push) }
